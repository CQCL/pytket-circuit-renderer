@import "@/themeVariables.scss";

/* Circuit renderer specific styling options */
.circuit_variables {
    /* Define some variables */
    --block-height: 3em;
    --box-height: 1.3em;
    --box-margin: calc((var(--block-height) - var(--box-height) - (2 * var(--box-padding))) / 2);
    --box-padding: 0.3em;
    --box-border-width: 1px;

    --base-wire-height: 2px;
    --wire-col: var(--text-title);
    --c-wire-col: var(--text-secondary);

    --box-index-col: var(--text-primary);
    --box-text-col: var(--text-title);
}
.theme_variables.light .circuit_variables {
    --spider-border: var(--base-wire-height);

    --box-col: #{$grey400};
    --box-col-overlay: #{rgba($grey400, 0.1)};
    --c-box-col: #{$grey300};

    --h-main: #{$circuit-h-main};
    --h-light: #{$circuit-h-light};
    --h-dark: #{$circuit-h-dark};
    --x-main: #{$circuit-x-main};
    --x-light: #{$circuit-x-light};
    --x-dark: #{$circuit-x-dark};
    --y-main: #{$circuit-y-main};
    --y-light: #{$circuit-y-light};
    --y-dark: #{$circuit-y-dark};
    --z-main: #{$circuit-z-main};
    --z-light: #{$circuit-z-light};
    --z-dark: #{$circuit-z-dark};
}
.theme_variables.dark .circuit_variables {
    --spider-border: 0px; // No borders in dark mode.
    --wire-col: #{$grey500};
    --c-wire-col: #{$grey700};

    --box-col: #{$grey700};
    --box-col-overlay: #{rgba($darkLevel1, 0.3)};
    --c-box-col: #{$grey800};

    --box-border-width: 0px;

    --h-main: #{$darkCircuit-h-main};
    --h-light: #{$darkCircuit-h-light};
    --h-dark: #{$darkCircuit-h-dark};
    --x-main: #{$darkCircuit-x-main};
    --x-light: #{$darkCircuit-x-dark};
    --x-dark: #{$darkCircuit-x-light};
    --y-main: #{$darkCircuit-y-main};
    --y-light: #{$darkCircuit-y-dark};
    --y-dark: #{$darkCircuit-y-light};
    --z-main: #{$darkCircuit-z-main};
    --z-light: #{$darkCircuit-z-dark};
    --z-dark: #{$darkCircuit-z-light};
}

.circuit-preview {
  background: var(--background);

  * {
    box-sizing: border-box !important;
  }
}

.circuit-container {
  color: var(--wire-col);

  /* Box colours */
  .h {
    --box-col: var(--h-main);
    --c-box-col:  var(--h-light);
    --box-index-col: var(--h-dark);
  }

  .x {
    --box-col: var(--x-main);
    --c-box-col:  var(--x-light);
    --box-index-col: var(--x-dark);
  }

  .y {
    --box-col: var(--y-main);
    --c-box-col:  var(--y-light);
    --box-index-col: var(--y-dark);
  }

  .z {
    --box-col: var(--z-main);
    --c-box-col:  var(--z-light);
    --box-index-col: var(--z-dark);
  }

  .nested .circuit-layer{
      margin-bottom: 0;
  }

  /* Display qubit names at start of circuit */
  .qubit {
    height: var(--block-height);
    padding: calc((var(--block-height) - 1em) / 2) 0.5em;
    text-align: center;
    font-family: monospace;
  }

  /* WIRES */
  .wire {
    height: var(--wire-height);
    top: calc((var(--block-height) - var(--wire-height)) / 2);
  }

  .wire,
  .link {
    --wire-height: var(--base-wire-height);
    background: var(--wire-col);
    position: relative;
  }

  .wire.classical,
  .link.classical {
    --wire-height: calc(var(--base-wire-height) / 2);
    background: var(--c-wire-col) !important;
  }

  .wire.classical.condensed {
    --wire-height: calc(var(--base-wire-height) * 2);
  }

  .wire.wire_in {
    width: var(--box-margin);
    margin: calc((var(--block-height) - var(--wire-height)) / 2) 0;
    top: 0;
  }

  .wire.flex_wire {
    flex-grow: 1;
  }

  .wire.transparent-wire {
    background: transparent;
  }

  /* Generic base for our gates */
  .gate_container {
    display: flow-root;
    position: relative;
    min-width: fit-content;
    height: var(--block-height);
  }

  .gate_container.nested {
    display: flex;
    flex-wrap: nowrap;
    height: fit-content;
  }

  .gate_container.generic {
    flex-grow: 1;
  }

  .gate_container.nested:after {
    display: flex;
    flex-wrap: nowrap;
  }

  .gate_container .classical {
    background: var(--c-box-col);
  }

  .gate {
    position: relative;
    margin: var(--box-margin);
    border: var(--box-border-width) solid var(--wire-col);
    padding: calc(0.4em + var(--box-padding)) 0.4em;
    text-align: left;
    background: var(--box-col);
    display: flex;
    z-index: 1;
    color: var(--box-text-col)
  }

  .gate.gate_special {
    --box-margin: calc((var(--block-height) - var(--box-height)) / 2);
    --box-padding: 0em;
  }

  .gate.connected {
    margin-left: 0;
    margin-right: 0;
  }

  .wire-label {
    color: var(--box-index-col);
    width: -moz-fit-content;
    width: fit-content;
    padding-right: 0.4em;
  }

  .gate_top > .wire-label,
  .gate_bottom > .wire-label {
    padding-top: 0;
  }

  /* Multi-qubit gates */
  .gate_bottom {
    height: calc(var(--box-height) + var(--box-margin) + (2 * var(--box-padding)));
    margin-top: 0;
    padding-top: calc(var(--box-padding) + var(--box-margin));
    padding-bottom: var(--box-padding);
    border-top: none;
  }

  .gate_mid {
    height: var(--block-height);
    margin-top: 0;
    margin-bottom: 0;
    padding-top: calc(var(--box-margin) + var(--box-padding));
    padding-bottom: calc(var(--box-margin) + var(--box-padding));
    border-top: none;
    border-bottom: none;
  }

  .gate_top {
    height: calc(var(--box-height) + var(--box-margin) + (2 * var(--box-padding)) + 1px);
    margin-bottom: 0;
    padding-top: var(--box-padding);
    padding-bottom: calc(var(--box-padding) + var(--box-margin));
    border-bottom: none;
  }

  .gate_name {
    text-align: center;
    flex-grow: 1;
  }

  /* Single qubit gate*/
  .gate_box {
    height: calc(var(--box-height) + var(--box-border-width) + (2 * var(--box-padding)));
    min-width: calc(var(--box-height) + var(--box-border-width) + (2 * var(--box-padding)));
    margin-left: 0;
    margin-right: 0;
    padding-top: var(--box-padding);
    padding-bottom: var(--box-padding);
    text-align: center;
  }

  /* Special gates */
  .gate_connection {
    border: none;
    margin: 0;
    padding: 0;
    width: 0;
  }

  .gate_swap,
  .gate_measure {
    position: absolute;
    left: calc(50% - var(--box-height) / 2);
    height: var(--box-height);
    width: var(--box-height);
    margin: var(--box-margin) 0;
    background: transparent;
    color: var(--wire-col);
  }

  .gate_swap > svg,
  .gate_measure > svg {
    width: 100%;
    height: 100%;
    padding: 0;
  }

  .gate_control {
    position: absolute;
    top: 0;
    left: 0;
    border-radius: 50%;
    width: 0.5em;
    height: 0.5em;
    margin: calc(var(--block-height) / 2 - 0.25em) calc(50% - 0.25em);
    padding: 0;
    border: var(--spider-border) solid var(--wire-col);
    background: var(--wire-col);
  }

  .gate_control.classical {
    background: var(--c-wire-col);
    border-color: var(--c-wire-col);
  }

  .control_index {
    position: absolute;
    right: calc(50% - 1em);
    top: calc(50% - 1.4em);
    color: var(--c-wire-col);
    font-size: 0.8em;
  }

  .control_index.measure {
    right: calc(50% - 1.2em);
    color: var(--box-index-col);
  }

  .gate_reset {
    margin-left: 0;
    margin-right: 0;
    padding: 0 0 0 10px;
    border: none !important;
    border-left: var(--base-wire-height) solid var(--wire-col) !important;
    background: transparent;
  }

  .gate_reset_spider {
    width: calc(var(--box-height) - 24px);
    height: calc(var(--box-height) - 24px);
    background: var(--box-col);
    border-radius: 50%;
    font-size: 0.75em;
  }

  .gate_barrier.link {
    border: var(--wire-height) dashed var(--c-wire-col);
    border-width: 0 var(--wire-height) 0 0;
    background: transparent !important;
    top: 0;
    width: 0;
    padding:0;
    margin: 0 auto;
  }

  .gate-barrier.gate_mid {
    height: 100%;
  }

  .gate_barrier.gate_bottom {
    margin-bottom: var(--box-margin);
  }

  .gate_barrier.gate_top {
    margin-top: var(--box-margin);
  }

  .gate_barrier.gate_box {
    margin-bottom: var(--box-margin);
    margin-top: var(--box-margin);
  }

  /* Special ZX style gates */
  .zx-spider {
    border: var(--spider-border) solid var(--wire-col);
    border-radius: calc(var(--box-height) / 2);
    height: var(--box-height);
    min-width: var(--box-height);
    width: fit-content;
  }

  .zx-cz > .zx-hadamard {
    top: calc(0px - var(--box-height));
    left: calc(50% - (var(--box-height) / 4) );
    margin: 0;
  }

  .zx-hadamard {
    position: absolute;
    top: calc(var(--box-height) / 4);
    left: calc(0px - var(--box-height) / 4);
    width: calc(var(--box-height) / 2);
    min-width: unset;
    height: calc(var(--box-height) / 2);
    padding: 0;
    border: var(--spider-border) solid var(--wire-col);
    background: var(--box-col);
  }

  /* Vertical wire links */
  .link-bottom, .link-top {
    height: var(--block-height);
    width: var(--wire-height);
    background: var(--wire-col);
    position: absolute;
    left: calc(50% - var(--wire-height) / 2);
  }

  .link-top {
    top: calc(0px - var(--block-height) / 2);
  }

  .link-bottom {
    top: calc(var(--block-height) / 2)
  }

  .link-bottom.classical {
    z-index: 1;
  }

  .nested > .tool-tip-container {
    position: absolute;
    bottom: -10px;
  }

  .tool-tip .complex-number{
    padding: 4px;
  }
}